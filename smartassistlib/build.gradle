plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.google.devtools.ksp)
    alias(libs.plugins.android.hilt)
}

static def getSecret() {
    return System.getenv("SMART_ASSIST_SECRET").toString()
}

static def getOpenAiEApiKey() {
    return System.getenv("OPENAI_E_API_KEY").toString()
}

static def getOpenAiVi() {
    return System.getenv("OPENAI_VI").toString()
}

static def getGeminiEApiKey() {
    return System.getenv("GEMINI_E_API_KEY").toString()
}

static def getGeminiVi() {
    return System.getenv("GEMINI_VI").toString()
}


android {
    namespace 'com.gowittgroup.smartassistlib'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        buildConfigField "String", "SECRET", "\"${getSecret()}\""
        buildConfigField "String", "OPENAI_E_API_KEY", "\"${getOpenAiEApiKey()}\""
        buildConfigField "String", "OPENAI_VI", "\"${getOpenAiVi()}\""
        buildConfigField "String", "GEMINI_E_API_KEY", "\"${getGeminiEApiKey()}\""
        buildConfigField "String", "GEMINI_VI", "\"${getGeminiVi()}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    tasks.withType(Test).tap {
        configureEach {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation project(path: ':core')

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat


    //Gson
    implementation libs.gson

    //Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp.sse
    implementation libs.logging.interceptor

    //Room DB
    implementation libs.androidx.room.runtime
    implementation libs.firebase.firestore.ktx
    annotationProcessor libs.androidx.room.compiler
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler


    //Hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler

    // Gemini
    implementation libs.firebase.vertexai

    // Firebase
    implementation libs.firebase.database.ktx
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.authentication.ktx

    implementation libs.billing

    //Test
    testImplementation libs.mockk
    testImplementation libs.junit.jupiter
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.kotlinx.coroutines.test
}
